{
    "critiques": {
        "680": {
            "rubric_items": {
                "7303": {
                    "result": "failed",
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 14. Submission includes heuristic_analysis.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named heuristic_analysis.pdf for review.\n\n\nFailed Test: 15. Submission includes research_review.pdf\n----------------------------------------------------------------------\nAssertionError: False is not true : You must submit a report named research_review.pdf for review.\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n14. Submission includes heuristic_analysis.pdf:                        F\n15. Submission includes research_review.pdf:                           F\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```"
                },
                "5510": {
                    "result": "failed",
                    "observation": "Not all of the tests passed.\n\n```\n************************************************************************\n                         Test Failure Feedback                          \n************************************************************************\n\nFailed Test: 1. Test output interface of MinimaxPlayer.minimax()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/grader/isolation/workspace/game_agent.py\", line 329, in minimax\n    return self.minimax_helper(self, game, depth)[0]\nTypeError: minimax_helper() takes 3 positional arguments but 4 were given\n\n\nFailed Test: 2. Test functionality of MinimaxPlayer.minimax()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/grader/isolation/workspace/game_agent.py\", line 329, in minimax\n    return self.minimax_helper(self, game, depth)[0]\nTypeError: minimax_helper() takes 3 positional arguments but 4 were given\n\n\nFailed Test: 3. Test that minimax() raises SearchTimeout when the timer expires\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/grader/isolation/workspace/game_agent.py\", line 329, in minimax\n    return self.minimax_helper(self, game, depth)[0]\nTypeError: minimax_helper() takes 3 positional arguments but 4 were given\n\n\nFailed Test: 4. Test that MinimaxPlayer successfully plays a full game\n----------------------------------------------------------------------\nTraceback (most recent call last):\nTypeError: minimax_helper() takes 3 positional arguments but 4 were given\n\nDuring handling of the above exception, another exception occurred:\n\nAssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.\nException: minimax_helper() takes 3 positional arguments but 4 were given\n\n\nFailed Test: 5. Test interface of AlphaBetaPlayer.alphabeta()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/grader/isolation/workspace/game_agent.py\", line 446, in alphabeta\n    return self.alphabeta_helper(self, game, depth, alpha, beta)[0]\nTypeError: alphabeta_helper() takes from 3 to 5 positional arguments but 6 were given\n\n\nFailed Test: 7. Test functionality of AlphaBetaPlayer.alphabeta()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/grader/isolation/workspace/game_agent.py\", line 446, in alphabeta\n    return self.alphabeta_helper(self, game, depth, alpha, beta)[0]\nTypeError: alphabeta_helper() takes from 3 to 5 positional arguments but 6 were given\n\n\nFailed Test: 8. Test that alphabeta() raises SearchTimeout when the timer expires\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/grader/isolation/workspace/game_agent.py\", line 446, in alphabeta\n    return self.alphabeta_helper(self, game, depth, alpha, beta)[0]\nTypeError: alphabeta_helper() takes from 3 to 5 positional arguments but 6 were given\n\n\nFailed Test: 9. Test iterative deepening in AlphaBetaPlayer.get_move()\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/home/grader/isolation/workspace/game_agent.py\", line 389, in get_move\n    best_move = self.alphabeta(game, depth)\n  File \"/home/grader/isolation/testcases.py\", line 1027, in alphabeta\n    raise game_agent.SearchTimeout\nworkspace.game_agent.SearchTimeout\n\n\nFailed Test: 10. Test that AlphaBetaPlayer successfully plays a full game\n----------------------------------------------------------------------\nTraceback (most recent call last):\nTypeError: alphabeta_helper() takes from 3 to 5 positional arguments but 6 were given\n\nDuring handling of the above exception, another exception occurred:\n\nAssertionError: Your agent raised an error while attempting to play a complete game against another agent.  Make sure that your agent can play an entire game -- including selecting initial moves on an empty board.\nException: alphabeta_helper() takes from 3 to 5 positional arguments but 6 were given\n\n\n************************************************************************\n                          Test Result Summary                           \n************************************************************************\n\n1. Test output interface of MinimaxPlayer.minimax():                   E\n2. Test functionality of MinimaxPlayer.minimax():                      E\n3. Test that minimax() raises SearchTimeout when the timer expires:    E\n4. Test that MinimaxPlayer successfully plays a full game:             F\n5. Test interface of AlphaBetaPlayer.alphabeta():                      E\n6. Test the interface of AlphaBetaPlayer.get_move():                   .\n7. Test functionality of AlphaBetaPlayer.alphabeta():                  E\n8. Test that alphabeta() raises SearchTimeout when the timer expires:  E\n9. Test iterative deepening in AlphaBetaPlayer.get_move():             E\n10. Test that AlphaBetaPlayer successfully plays a full game:          F\n11. Test output interface of custom_score():                           .\n12. Test output interface of custom_score_2():                         .\n13. Test output interface of custom_score_3():                         .\n\n------------------------------------------------------------------------\n            . - Test Passed    F - Test Failed    E - Error             \n\n```"
                }
            }
        }
    }
}